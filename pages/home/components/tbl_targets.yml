id: '17244046566560.8835059581603153'
definitionId: smartTable
parentSlotId: '2'
styles:
  xl:
    gridItem:
      x: 0
      y: 36
      w: 24
      h: 270
    flex:
      size:
        widthValue: 500
        widthUnit: px
        heightValue: 320
        heightUnit: px
      grow: '0'
      shrink: '0'
  xs:
    gridItem:
      x: 0
      y: 27
      w: 24
      h: 80
    flex:
      size:
        widthValue: 500
        widthUnit: px
        heightValue: 320
        heightUnit: px
      grow: '0'
      shrink: '0'
properties:
  dynamicColumns:
    value: []
    dataValue: |-
      [
        {
          "prop": "id",
          "type": "number",
          "primaryKey": true
        },
        "name",
        {
          "prop": "avatar",
          "type": "image"
        },
        {
          "prop": "email",
          "type": "link"
        }
      ]
    withData: false
  data: >-
    {{ actions.lu_targets.data}}


    // // Create an object to store the filter conditions

    // var filters = {};


    // // Check if 'ui' exists and use destructuring to extract required
    properties

    // if (ui) {

    //   const { flt_target, flt_topic, flt_level } = ui;


    //   // Reduce the filter conditions into the 'filters' object

    //   const filterConditions = [

    // //     { key: 'target', value: flt_target?.value },

    //     { key: 'topic_id', value: flt_topic?.value },

    //     { key: 'level', value: flt_level?.value },

    //   ];


    //   console.log(filterConditions);


    //   filters = filterConditions.reduce((result, condition) => {

    //     if (condition.value !== undefined && condition.value !== null &&
    condition.value !== '' && condition.value.length !== 0) {

    //       result[condition.key] = condition.value;

    //     }

    //     return result;

    //   }, {});

    // }


    // console.log(filters);


    // // Apply the filters and map the results

    // let output = [];

    // let inputData = actions.lu_targets;


    // if (actions && inputData && inputData.data !== null) {

    //   output = inputData.data

    //     .filter((c) => {

    // //       Apply standard filters

    //       for (const key in filters) {

    //         if (Array.isArray(filters[key])) {

    //           if (!filters[key].includes(c[key])) {

    //             return false;

    //           }

    //         } else {

    //           if (c[key] !== filters[key]) {

    //             return false;

    //           }

    //         }

    //       }


    //       // Apply text containment filter

    //       if (ui.flt_target.value) {

    //         const text = ui.flt_target.value.toLowerCase();

    //         const title = c.target?.toLowerCase() || '';


    //         if (!title.includes(text)) {

    //           return false;

    //         }

    //       }


    //       return true;

    //     });

    // }


    // return output;
  name: tbl_targets
  __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
    - xl
    - xs
  title: Targets
  showLoading:
    value: false
    dataValue: '{{actions.lu_targets.loading}}'
    withData: true
  multiplyRowSelection:
    value: true
    dataValue: 'false'
    withData: false
  rowSelectionType:
    value: checkbox
    dataValue: row
    withData: false
  selectedRowIndex: ''
  heightMode: auto
  limit: '25'
  rowHeight: dynamic
  triggerRowSelectOnInit:
    value: false
    dataValue: 'false'
    withData: false
  showFilter:
    withData: false
    dataValue: 'false'
    value: true
  disableRowSelection:
    value: false
    dataValue: '{{state.is_processing}}'
    withData: true
actions:
  smartTableRowSelect: []
  uiOnCellChangeTrigger: []
  init: []
  smartTableCreate: []
  smartTableEdit: []
  smartTableBulkEdit: []
  smartTableDelete: []
  smartTableRowClick: []
  uiOnRowDoubleClick: []
  smartTablePageSelect: []
  uiOnPageSizeChange: []
  smartTableFilterChange: []
  smartTableSortChange: []
  smartTableReload: []
slots:
  - id: '17244046566560.7510607580618545'
    name: columns
    children:
      - id: '17244059391500.9096461833961393'
        definitionId: atomicString
        parentSlotId: '17244046566560.7510607580618545'
        styles:
          xl:
            visible: false
        properties:
          name: atomicString4
          prop: id
          primaryKey: true
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          width: 120
          widthMode: auto
          filter: true
          forceEditSubmitTriggers:
            - enter
          labelConfig:
            align: left
            position: vertical
        index: 0
        slots: []
      - id: '17244059391500.41037913227096245'
        definitionId: atomicText
        parentSlotId: '17244046566560.7510607580618545'
        styles:
          xl:
            visible: true
        properties:
          name: atomicText
          prop: target
          primaryKey: false
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          width: 864
          widthMode: fixed
          filter: true
          forceEditSubmitTriggers:
            - blur
          labelConfig:
            align: left
            position: vertical
        actions: {}
        index: 1
        slots: []
      - id: '17244059831420.32790608038520985'
        definitionId: atomicString
        parentSlotId: '17244046566560.7510607580618545'
        styles:
          xl:
            visible: true
        properties:
          name: atomicString5
          prop: level
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          filter: true
          widthMode: auto
          forceEditSubmitTriggers:
            - enter
          labelConfig:
            align: left
            position: vertical
        index: 3
        slots: []
      - id: '17244060329170.8864140858450082'
        definitionId: atomicText
        parentSlotId: '17244046566560.7510607580618545'
        styles: {}
        properties:
          name: atomicText
          prop: display
          primaryKey: false
          __UIBAKERY__RESPONSIVE__SHOW__CONDITION__CODE__:
            - xl
            - xs
          filterVariation:
            value: includes
            dataValue: includes
            withData: false
          mappedValue: ''
          title: Topic
          filter: true
          widthMode: auto
          width: 277
          forceEditSubmitTriggers:
            - blur
          labelConfig:
            align: left
            position: vertical
        index: 2
        slots: []
